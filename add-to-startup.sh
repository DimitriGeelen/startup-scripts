#!/bin/bash

# =================================================================
# Startup Command Manager - A utility for managing startup commands
# =================================================================
#
# Description:
#   This script helps you easily add commands to your shell's startup file
#   (like .bashrc, .zshrc, or .profile) without having to manually edit 
#   these files. It provides a guided interactive process for:
#
#   - Adding any command to run automatically when you log in
#   - Specifying a working directory for the command
#   - Organizing commands with optional section headers
#
# Usage:
#   1. Run this script: ./add-to-startup.sh
#   2. Follow the prompts to specify your command and options
#   3. Changes take effect on next login or by sourcing your startup file
#
# Author: Generated by Claude
# Version: 1.0
#
# =================================================================

# Colors for better visual feedback
GREEN='\033[0;32m'
BLUE='\033[0;34m'
RESET='\033[0m'

# Determine which startup file to use
determine_startup_file() {
    local shell_name=$(basename "$SHELL")
    
    case "$shell_name" in
        bash)
            if [ -f "$HOME/.bash_profile" ]; then
                echo "$HOME/.bash_profile"
            else
                echo "$HOME/.bashrc"
            fi
            ;;
        zsh)
            echo "$HOME/.zshrc"
            ;;
        *)
            echo "$HOME/.profile"
            ;;
    esac
}

STARTUP_FILE=$(determine_startup_file)

# Get script location
SCRIPT_PATH="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)/$(basename "${BASH_SOURCE[0]}")"

# Print welcome message
echo -e "${GREEN}Add Command to Startup Script${RESET}"
echo "Script location: $SCRIPT_PATH"
echo "This script will add a command to your startup file: $STARTUP_FILE"
echo ""

# Ask for an optional header/section name
echo ""
read -p "Enter a section name for this command (optional, press Enter to skip): " SECTION_NAME

# Ask for the command to add
echo ""
read -p "Enter the command you want to run at startup: " COMMAND

if [ -z "$COMMAND" ]; then
    echo "No command entered. Exiting."
    exit 1
fi

# Ask for the path
echo ""
echo -e "${BLUE}Path Options:${RESET}"
echo "1. Use current directory: $(pwd)"
echo "2. Specify a different path"
read -p "Enter your choice (1/2): " PATH_CHOICE

if [ "$PATH_CHOICE" = "1" ]; then
    COMMAND_PATH="$(pwd)"
else
    read -p "Enter the full path: " COMMAND_PATH
    
    # Validate the path
    if [ ! -d "$COMMAND_PATH" ]; then
        echo "Warning: The path '$COMMAND_PATH' does not exist or is not a directory."
        read -p "Continue anyway? (y/n): " CONTINUE
        if [ "$CONTINUE" != "y" ]; then
            echo "Exiting."
            exit 1
        fi
    fi
fi

# Create the final command with cd if needed
if [ -n "$COMMAND_PATH" ]; then
    FULL_COMMAND="cd \"$COMMAND_PATH\" && $COMMAND"
else
    FULL_COMMAND="$COMMAND"
fi

# Confirm with the user
echo ""
echo -e "${GREEN}Summary:${RESET}"
echo "Section name: ${SECTION_NAME:-None}"
echo "Command: $COMMAND"
echo "Path: $COMMAND_PATH"
echo "Full command to add: $FULL_COMMAND"
echo "Startup file: $STARTUP_FILE"
read -p "Add this command to your startup file? (y/n): " CONFIRM

if [ "$CONFIRM" = "y" ]; then
    # Add the command to the startup file
    echo "" >> "$STARTUP_FILE"
    
    # Add section header if provided
    if [ -n "$SECTION_NAME" ]; then
        echo "" >> "$STARTUP_FILE"
        echo "### $SECTION_NAME ###" >> "$STARTUP_FILE"
    fi
    
    echo "# Added by startup script manager on $(date)" >> "$STARTUP_FILE"
    echo "$FULL_COMMAND" >> "$STARTUP_FILE"
    
    echo ""
    echo -e "${GREEN}Success!${RESET} Command added to $STARTUP_FILE"
    echo "Changes will take effect on next login or when you run: source $STARTUP_FILE"
else
    echo "Operation cancelled. No changes were made."
fi